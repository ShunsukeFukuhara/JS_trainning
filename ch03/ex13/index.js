// ==, <=, の演算子と同等の挙動を取る関数 eq および lte を作成しなさい。
// ex13/index.test.js のテストを全てパスするように index.js (または index.ts)を作成しなさい。
// 3 章で説明されている各型 (ただし BigInt 及び Symbol は考慮しなくて良い) や自作クラスに対しても同等の挙動を取るようにしなさい。
// 作成する関数の内部実装については以下の条件に従いなさい。

// 同値演算子 === を利用して良い
// 基本型値同士の比較に関しては < 演算子を利用して良い
// 文字列を数値に変換するのに Number() を利用して良い
// 最新の ECMA の抽象関係比較アルゴリズムの仕様では、オブジェクト型値から基本型値への変換に Symbol.ToPrimitive を利用することになっているが、
// 解答では書籍に記載された型変換アルゴリズムを利用すること

export function eq(a, b) {
  // TODO: ここを実装しなさい
  return false;
}

export function lte(a, b) {
  // TODO: ここを実装しなさい
  return false;
}
